@inherits LayoutComponentBase

@using Client.State;

@inject QuizManager quizManager

<Sidebar @ref="sidebar">
    <SidebarContent>
        <SidebarBrand>
            <a href="">Parmenion Quiz</a>
        </SidebarBrand>
        <SidebarNavigation>
            <SidebarLabel>Main</SidebarLabel>
            <SidebarItem>
                <SidebarLink To="" Title="Home">
                    <Icon Name="IconName.Dashboard" Margin="Margin.Is3.FromRight" />Home
                </SidebarLink>
            </SidebarItem>
            <SidebarItem>
                <SidebarLink Toggled="(isOpen) => quizAdminItems.Toggle(isOpen)" IsShow="true">
                    <Icon Name="IconName.Edit" Margin="Margin.Is3.FromRight" />Quiz admin
                </SidebarLink>
                <SidebarSubItem @ref="quizAdminItems" IsShow="true">
                    <SidebarItem>
                        <SidebarLink To="quiz/new">
                            <Icon Name="IconName.New" />New quiz
                        </SidebarLink>
                    </SidebarItem>
                    <SidebarItem>
                        <SidebarLink To="quiz"><Icon Name="IconName.Edit" />Edit quizes</SidebarLink>
                    </SidebarItem>
                </SidebarSubItem>
            </SidebarItem>
            <SidebarItem>
                <SidebarLink To="/about" Title="About">
                    <Icon Name="IconName.Dashboard" Margin="Margin.Is3.FromRight" />About
                </SidebarLink>
            </SidebarItem>
        </SidebarNavigation>
    </SidebarContent>
</Sidebar>

<Container Margin="Margin.Is4">
    @Body
</Container>

@code{
    Sidebar sidebar;
    SidebarSubItem quizAdminItems;

    protected override async Task OnInitializedAsync()
    {
        await quizManager.InitialiseQuizes();

        // quizManager.OnChange += StateHasChanged;
    }
}
