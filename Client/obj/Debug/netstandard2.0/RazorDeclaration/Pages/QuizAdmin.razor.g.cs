#pragma checksum "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ee3b98eec3f51227ae783f56fa9814c66b8defa"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using Client;
    using Client.Shared;
    using Models.Api;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/quizes")]
    public class QuizAdmin : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 37 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
            
        QuizDto[] quizes;
    private bool showAddQuiz { get; set; } = false;

    public QuizDto newQuiz { get; set; } = new QuizDto { Questions = new List<QuestionDto>() };

    protected override async Task OnInitAsync()
    {
        await GetQuizData();
    }

    async Task<QuizDto[]> GetQuizData()
    {
        quizes = await client.GetAsync<QuizDto[]>("api/quiz");
        Console.WriteLine(quizes[0].Questions.Count);
        return quizes;
    }

    void ToggleQuizFields(QuizDto quiz = null)
    {
        showAddQuiz = true;
        newQuiz = quiz ?? new QuizDto { Questions = new List<QuestionDto>() };
    }

    async Task<bool> HandleSubmit()
    {
        if (showAddQuiz)
        {
            if (newQuiz.Id == 0)
            {
                await client.PutAsync<QuizDto>("api/quiz", newQuiz);
            }
            else
            {
                await client.PostAsync<QuizDto>("api/quiz", newQuiz);
            }

            return true;
        }

        Console.WriteLine("There are no quizes");
        return false;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Client.IApiClient client { get; set; }
    }
}
#pragma warning restore 1591
