#pragma checksum "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ee3b98eec3f51227ae783f56fa9814c66b8defa"
// <auto-generated/>
#pragma warning disable 1591
namespace Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using Client;
    using Client.Shared;
    using Models.Api;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/quizes")]
    public class QuizAdmin : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.AddMarkupContent(0, "<h1>Admin</h1>\r\n\r\n");
#line 7 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
 if (quizes == null)
{

#line default
#line hidden
            builder.AddContent(1, "    ");
            builder.AddMarkupContent(2, "<p><em>Loading ...</em></p>\r\n");
#line 10 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
}
else
{
    

#line default
#line hidden
#line 13 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
     if (!quizes.Any())
    {

#line default
#line hidden
            builder.AddContent(3, "        ");
            builder.AddMarkupContent(4, "<p><span>There aren\'t quizes at the moment, add one below</span></p>\r\n");
#line 16 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
    }
    else
    {

#line default
#line hidden
            builder.AddContent(5, "        ");
            builder.OpenElement(6, "ul");
            builder.AddMarkupContent(7, "\r\n");
#line 20 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
             foreach (var quiz in quizes)
            {

#line default
#line hidden
            builder.AddContent(8, "                ");
            builder.OpenElement(9, "li");
            builder.OpenElement(10, "a");
            builder.AddAttribute(11, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, () => ToggleQuizFields(quiz)));
            builder.AddContent(12, quiz.Name);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(13, "\r\n");
#line 23 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
            }

#line default
#line hidden
            builder.AddContent(14, "        ");
            builder.CloseElement();
            builder.AddMarkupContent(15, "\r\n");
#line 25 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
    }

#line default
#line hidden
            builder.AddContent(16, "    ");
            builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.EditForm>(17);
            builder.AddAttribute(18, "OnValidSubmit", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Forms.EditContext>(this, HandleSubmit)));
            builder.AddAttribute(19, "Model", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Object>(newQuiz));
            builder.AddAttribute(20, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>)((context) => (builder2) => {
                builder2.AddMarkupContent(21, "\r\n        ");
                builder2.OpenComponent<Microsoft.AspNetCore.Components.Forms.FluentValidationValidator>(22);
                builder2.CloseComponent();
                builder2.AddMarkupContent(23, "\r\n        ");
                builder2.OpenElement(24, "button");
                builder2.AddAttribute(25, "class", "btn btn-primary");
                builder2.AddAttribute(26, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, () => ToggleQuizFields()));
                builder2.AddContent(27, "Add quiz");
                builder2.CloseElement();
                builder2.AddMarkupContent(28, "\r\n\r\n        ");
                builder2.OpenElement(29, "div");
                builder2.AddAttribute(30, "hidden", !showAddQuiz);
                builder2.AddMarkupContent(31, "\r\n            ");
                builder2.OpenComponent<Client.Pages.EditQuiz>(32);
                builder2.AddAttribute(33, "quiz", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Models.Api.QuizDto>(newQuiz));
                builder2.CloseComponent();
                builder2.AddMarkupContent(34, "\r\n        ");
                builder2.CloseElement();
                builder2.AddMarkupContent(35, "\r\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Submit\">\r\n    ");
            }
            ));
            builder.CloseComponent();
            builder.AddMarkupContent(36, "\r\n");
#line 35 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 37 "C:\Users\Tim\source\repos\BlazorQuiz\Client\Pages\QuizAdmin.razor"
            
        QuizDto[] quizes;
    private bool showAddQuiz { get; set; } = false;

    public QuizDto newQuiz { get; set; } = new QuizDto { Questions = new List<QuestionDto>() };

    protected override async Task OnInitAsync()
    {
        await GetQuizData();
    }

    async Task<QuizDto[]> GetQuizData()
    {
        quizes = await client.GetAsync<QuizDto[]>("api/quiz");
        Console.WriteLine(quizes[0].Questions.Count);
        return quizes;
    }

    void ToggleQuizFields(QuizDto quiz = null)
    {
        showAddQuiz = true;
        newQuiz = quiz ?? new QuizDto { Questions = new List<QuestionDto>() };
    }

    async Task<bool> HandleSubmit()
    {
        if (showAddQuiz)
        {
            if (newQuiz.Id == 0)
            {
                await client.PutAsync<QuizDto>("api/quiz", newQuiz);
            }
            else
            {
                await client.PostAsync<QuizDto>("api/quiz", newQuiz);
            }

            return true;
        }

        Console.WriteLine("There are no quizes");
        return false;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Client.IApiClient client { get; set; }
    }
}
#pragma warning restore 1591
